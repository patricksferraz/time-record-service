// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: time_record.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeRecord_Status int32

const (
	TimeRecord_STATUS_UNSPECIFIED TimeRecord_Status = 0
	TimeRecord_PENDING            TimeRecord_Status = 1
	TimeRecord_APPROVED           TimeRecord_Status = 2
	TimeRecord_REFUSED            TimeRecord_Status = 3
)

// Enum value maps for TimeRecord_Status.
var (
	TimeRecord_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PENDING",
		2: "APPROVED",
		3: "REFUSED",
	}
	TimeRecord_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PENDING":            1,
		"APPROVED":           2,
		"REFUSED":            3,
	}
)

func (x TimeRecord_Status) Enum() *TimeRecord_Status {
	p := new(TimeRecord_Status)
	*p = x
	return p
}

func (x TimeRecord_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRecord_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_time_record_proto_enumTypes[0].Descriptor()
}

func (TimeRecord_Status) Type() protoreflect.EnumType {
	return &file_time_record_proto_enumTypes[0]
}

func (x TimeRecord_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRecord_Status.Descriptor instead.
func (TimeRecord_Status) EnumDescriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{10, 0}
}

type ExportTimeRecordsRequest_ExporterType int32

const (
	ExportTimeRecordsRequest_EXPORTER_UNSPECIFIED ExportTimeRecordsRequest_ExporterType = 0
	ExportTimeRecordsRequest_SECULLUM             ExportTimeRecordsRequest_ExporterType = 1
)

// Enum value maps for ExportTimeRecordsRequest_ExporterType.
var (
	ExportTimeRecordsRequest_ExporterType_name = map[int32]string{
		0: "EXPORTER_UNSPECIFIED",
		1: "SECULLUM",
	}
	ExportTimeRecordsRequest_ExporterType_value = map[string]int32{
		"EXPORTER_UNSPECIFIED": 0,
		"SECULLUM":             1,
	}
)

func (x ExportTimeRecordsRequest_ExporterType) Enum() *ExportTimeRecordsRequest_ExporterType {
	p := new(ExportTimeRecordsRequest_ExporterType)
	*p = x
	return p
}

func (x ExportTimeRecordsRequest_ExporterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportTimeRecordsRequest_ExporterType) Descriptor() protoreflect.EnumDescriptor {
	return file_time_record_proto_enumTypes[1].Descriptor()
}

func (ExportTimeRecordsRequest_ExporterType) Type() protoreflect.EnumType {
	return &file_time_record_proto_enumTypes[1]
}

func (x ExportTimeRecordsRequest_ExporterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportTimeRecordsRequest_ExporterType.Descriptor instead.
func (ExportTimeRecordsRequest_ExporterType) EnumDescriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{11, 0}
}

type RegisterTimeRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeId  string               `protobuf:"bytes,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	CompanyId   string               `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Time        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Description string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RegisterTimeRecordRequest) Reset() {
	*x = RegisterTimeRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTimeRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTimeRecordRequest) ProtoMessage() {}

func (x *RegisterTimeRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTimeRecordRequest.ProtoReflect.Descriptor instead.
func (*RegisterTimeRecordRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterTimeRecordRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *RegisterTimeRecordRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *RegisterTimeRecordRequest) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *RegisterTimeRecordRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RegisterTimeRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterTimeRecordResponse) Reset() {
	*x = RegisterTimeRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTimeRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTimeRecordResponse) ProtoMessage() {}

func (x *RegisterTimeRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTimeRecordResponse.ProtoReflect.Descriptor instead.
func (*RegisterTimeRecordResponse) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterTimeRecordResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ApproveTimeRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ApproveTimeRecordRequest) Reset() {
	*x = ApproveTimeRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTimeRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTimeRecordRequest) ProtoMessage() {}

func (x *ApproveTimeRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTimeRecordRequest.ProtoReflect.Descriptor instead.
func (*ApproveTimeRecordRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{2}
}

func (x *ApproveTimeRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RefuseTimeRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RefusedReason string `protobuf:"bytes,2,opt,name=refused_reason,json=refusedReason,proto3" json:"refused_reason,omitempty"`
}

func (x *RefuseTimeRecordRequest) Reset() {
	*x = RefuseTimeRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseTimeRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseTimeRecordRequest) ProtoMessage() {}

func (x *RefuseTimeRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseTimeRecordRequest.ProtoReflect.Descriptor instead.
func (*RefuseTimeRecordRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{3}
}

func (x *RefuseTimeRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RefuseTimeRecordRequest) GetRefusedReason() string {
	if x != nil {
		return x.RefusedReason
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Error   string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{4}
}

func (x *StatusResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type FindTimeRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindTimeRecordRequest) Reset() {
	*x = FindTimeRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTimeRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTimeRecordRequest) ProtoMessage() {}

func (x *FindTimeRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTimeRecordRequest.ProtoReflect.Descriptor instead.
func (*FindTimeRecordRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{5}
}

func (x *FindTimeRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindTimeRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRecord *TimeRecord `protobuf:"bytes,1,opt,name=time_record,json=timeRecord,proto3" json:"time_record,omitempty"`
}

func (x *FindTimeRecordResponse) Reset() {
	*x = FindTimeRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTimeRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTimeRecordResponse) ProtoMessage() {}

func (x *FindTimeRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTimeRecordResponse.ProtoReflect.Descriptor instead.
func (*FindTimeRecordResponse) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{6}
}

func (x *FindTimeRecordResponse) GetTimeRecord() *TimeRecord {
	if x != nil {
		return x.TimeRecord
	}
	return nil
}

type FilterTimeRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDate   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Status     int32                `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	EmployeeId string               `protobuf:"bytes,4,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ApprovedBy string               `protobuf:"bytes,5,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	RefusedBy  string               `protobuf:"bytes,6,opt,name=refused_by,json=refusedBy,proto3" json:"refused_by,omitempty"`
	CreatedBy  string               `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CompanyId  string               `protobuf:"bytes,8,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	PageSize   int64                `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken  string               `protobuf:"bytes,10,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *FilterTimeRecords) Reset() {
	*x = FilterTimeRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterTimeRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterTimeRecords) ProtoMessage() {}

func (x *FilterTimeRecords) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterTimeRecords.ProtoReflect.Descriptor instead.
func (*FilterTimeRecords) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{7}
}

func (x *FilterTimeRecords) GetFromDate() *timestamp.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *FilterTimeRecords) GetToDate() *timestamp.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *FilterTimeRecords) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FilterTimeRecords) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *FilterTimeRecords) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *FilterTimeRecords) GetRefusedBy() string {
	if x != nil {
		return x.RefusedBy
	}
	return ""
}

func (x *FilterTimeRecords) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *FilterTimeRecords) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *FilterTimeRecords) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FilterTimeRecords) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type SearchTimeRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *FilterTimeRecords `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SearchTimeRecordsRequest) Reset() {
	*x = SearchTimeRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTimeRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTimeRecordsRequest) ProtoMessage() {}

func (x *SearchTimeRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTimeRecordsRequest.ProtoReflect.Descriptor instead.
func (*SearchTimeRecordsRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{8}
}

func (x *SearchTimeRecordsRequest) GetFilter() *FilterTimeRecords {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SearchTimeRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRecords   []*TimeRecord `protobuf:"bytes,1,rep,name=time_records,json=timeRecords,proto3" json:"time_records,omitempty"`
	NextPageToken string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *SearchTimeRecordsResponse) Reset() {
	*x = SearchTimeRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTimeRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTimeRecordsResponse) ProtoMessage() {}

func (x *SearchTimeRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTimeRecordsResponse.ProtoReflect.Descriptor instead.
func (*SearchTimeRecordsResponse) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{9}
}

func (x *SearchTimeRecordsResponse) GetTimeRecords() []*TimeRecord {
	if x != nil {
		return x.TimeRecords
	}
	return nil
}

func (x *SearchTimeRecordsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type TimeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status        TimeRecord_Status    `protobuf:"varint,3,opt,name=status,proto3,enum=github.com.c_4u.TimeRecord_Status" json:"status,omitempty"`
	Description   string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	RefusedReason string               `protobuf:"bytes,5,opt,name=refused_reason,json=refusedReason,proto3" json:"refused_reason,omitempty"`
	RegularTime   bool                 `protobuf:"varint,6,opt,name=regular_time,json=regularTime,proto3" json:"regular_time,omitempty"`
	TzOffset      int32                `protobuf:"varint,7,opt,name=tz_offset,json=tzOffset,proto3" json:"tz_offset,omitempty"`
	EmployeeId    string               `protobuf:"bytes,8,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	ApprovedBy    string               `protobuf:"bytes,9,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	RefusedBy     string               `protobuf:"bytes,10,opt,name=refused_by,json=refusedBy,proto3" json:"refused_by,omitempty"`
	CompanyId     string               `protobuf:"bytes,11,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TimeRecord) Reset() {
	*x = TimeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRecord) ProtoMessage() {}

func (x *TimeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRecord.ProtoReflect.Descriptor instead.
func (*TimeRecord) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{10}
}

func (x *TimeRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimeRecord) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TimeRecord) GetStatus() TimeRecord_Status {
	if x != nil {
		return x.Status
	}
	return TimeRecord_STATUS_UNSPECIFIED
}

func (x *TimeRecord) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TimeRecord) GetRefusedReason() string {
	if x != nil {
		return x.RefusedReason
	}
	return ""
}

func (x *TimeRecord) GetRegularTime() bool {
	if x != nil {
		return x.RegularTime
	}
	return false
}

func (x *TimeRecord) GetTzOffset() int32 {
	if x != nil {
		return x.TzOffset
	}
	return 0
}

func (x *TimeRecord) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *TimeRecord) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *TimeRecord) GetRefusedBy() string {
	if x != nil {
		return x.RefusedBy
	}
	return ""
}

func (x *TimeRecord) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *TimeRecord) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TimeRecord) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExportTimeRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter       *FilterTimeRecords                    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	ExporterType ExportTimeRecordsRequest_ExporterType `protobuf:"varint,2,opt,name=exporter_type,json=exporterType,proto3,enum=github.com.c_4u.ExportTimeRecordsRequest_ExporterType" json:"exporter_type,omitempty"`
}

func (x *ExportTimeRecordsRequest) Reset() {
	*x = ExportTimeRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTimeRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTimeRecordsRequest) ProtoMessage() {}

func (x *ExportTimeRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTimeRecordsRequest.ProtoReflect.Descriptor instead.
func (*ExportTimeRecordsRequest) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{11}
}

func (x *ExportTimeRecordsRequest) GetFilter() *FilterTimeRecords {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ExportTimeRecordsRequest) GetExporterType() ExportTimeRecordsRequest_ExporterType {
	if x != nil {
		return x.ExporterType
	}
	return ExportTimeRecordsRequest_EXPORTER_UNSPECIFIED
}

type ExportTimeRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registers     []string `protobuf:"bytes,1,rep,name=registers,proto3" json:"registers,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ExportTimeRecordsResponse) Reset() {
	*x = ExportTimeRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_time_record_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportTimeRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTimeRecordsResponse) ProtoMessage() {}

func (x *ExportTimeRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_time_record_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTimeRecordsResponse.ProtoReflect.Descriptor instead.
func (*ExportTimeRecordsResponse) Descriptor() ([]byte, []int) {
	return file_time_record_proto_rawDescGZIP(), []int{12}
}

func (x *ExportTimeRecordsResponse) GetRegisters() []string {
	if x != nil {
		return x.Registers
	}
	return nil
}

func (x *ExportTimeRecordsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_time_record_proto protoreflect.FileDescriptor

var file_time_record_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x5f, 0x34, 0x75, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x50, 0x0a, 0x17, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x54, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x56, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34,
	0x75, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xf4, 0x02, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x37,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x56, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd1, 0x04,
	0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x7a, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x7a, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10,
	0x03, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x5f, 0x34, 0x75, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x58, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x43, 0x55, 0x4c, 0x4c, 0x55, 0x4d, 0x10, 0x01, 0x22,
	0x61, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x32, 0xfd, 0x04, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x52,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x5f, 0x34, 0x75, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x29, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34,
	0x75, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x5f, 0x34, 0x75, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_time_record_proto_rawDescOnce sync.Once
	file_time_record_proto_rawDescData = file_time_record_proto_rawDesc
)

func file_time_record_proto_rawDescGZIP() []byte {
	file_time_record_proto_rawDescOnce.Do(func() {
		file_time_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_time_record_proto_rawDescData)
	})
	return file_time_record_proto_rawDescData
}

var file_time_record_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_time_record_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_time_record_proto_goTypes = []interface{}{
	(TimeRecord_Status)(0),                     // 0: github.com.c_4u.TimeRecord.Status
	(ExportTimeRecordsRequest_ExporterType)(0), // 1: github.com.c_4u.ExportTimeRecordsRequest.ExporterType
	(*RegisterTimeRecordRequest)(nil),          // 2: github.com.c_4u.RegisterTimeRecordRequest
	(*RegisterTimeRecordResponse)(nil),         // 3: github.com.c_4u.RegisterTimeRecordResponse
	(*ApproveTimeRecordRequest)(nil),           // 4: github.com.c_4u.ApproveTimeRecordRequest
	(*RefuseTimeRecordRequest)(nil),            // 5: github.com.c_4u.RefuseTimeRecordRequest
	(*StatusResponse)(nil),                     // 6: github.com.c_4u.StatusResponse
	(*FindTimeRecordRequest)(nil),              // 7: github.com.c_4u.FindTimeRecordRequest
	(*FindTimeRecordResponse)(nil),             // 8: github.com.c_4u.FindTimeRecordResponse
	(*FilterTimeRecords)(nil),                  // 9: github.com.c_4u.FilterTimeRecords
	(*SearchTimeRecordsRequest)(nil),           // 10: github.com.c_4u.SearchTimeRecordsRequest
	(*SearchTimeRecordsResponse)(nil),          // 11: github.com.c_4u.SearchTimeRecordsResponse
	(*TimeRecord)(nil),                         // 12: github.com.c_4u.TimeRecord
	(*ExportTimeRecordsRequest)(nil),           // 13: github.com.c_4u.ExportTimeRecordsRequest
	(*ExportTimeRecordsResponse)(nil),          // 14: github.com.c_4u.ExportTimeRecordsResponse
	(*timestamp.Timestamp)(nil),                // 15: google.protobuf.Timestamp
}
var file_time_record_proto_depIdxs = []int32{
	15, // 0: github.com.c_4u.RegisterTimeRecordRequest.time:type_name -> google.protobuf.Timestamp
	12, // 1: github.com.c_4u.FindTimeRecordResponse.time_record:type_name -> github.com.c_4u.TimeRecord
	15, // 2: github.com.c_4u.FilterTimeRecords.from_date:type_name -> google.protobuf.Timestamp
	15, // 3: github.com.c_4u.FilterTimeRecords.to_date:type_name -> google.protobuf.Timestamp
	9,  // 4: github.com.c_4u.SearchTimeRecordsRequest.filter:type_name -> github.com.c_4u.FilterTimeRecords
	12, // 5: github.com.c_4u.SearchTimeRecordsResponse.time_records:type_name -> github.com.c_4u.TimeRecord
	15, // 6: github.com.c_4u.TimeRecord.time:type_name -> google.protobuf.Timestamp
	0,  // 7: github.com.c_4u.TimeRecord.status:type_name -> github.com.c_4u.TimeRecord.Status
	15, // 8: github.com.c_4u.TimeRecord.created_at:type_name -> google.protobuf.Timestamp
	15, // 9: github.com.c_4u.TimeRecord.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 10: github.com.c_4u.ExportTimeRecordsRequest.filter:type_name -> github.com.c_4u.FilterTimeRecords
	1,  // 11: github.com.c_4u.ExportTimeRecordsRequest.exporter_type:type_name -> github.com.c_4u.ExportTimeRecordsRequest.ExporterType
	2,  // 12: github.com.c_4u.TimeRecordService.RegisterTimeRecord:input_type -> github.com.c_4u.RegisterTimeRecordRequest
	4,  // 13: github.com.c_4u.TimeRecordService.ApproveTimeRecord:input_type -> github.com.c_4u.ApproveTimeRecordRequest
	5,  // 14: github.com.c_4u.TimeRecordService.RefuseTimeRecord:input_type -> github.com.c_4u.RefuseTimeRecordRequest
	7,  // 15: github.com.c_4u.TimeRecordService.FindTimeRecord:input_type -> github.com.c_4u.FindTimeRecordRequest
	10, // 16: github.com.c_4u.TimeRecordService.SearchTimeRecords:input_type -> github.com.c_4u.SearchTimeRecordsRequest
	13, // 17: github.com.c_4u.TimeRecordService.ExportTimeRecords:input_type -> github.com.c_4u.ExportTimeRecordsRequest
	3,  // 18: github.com.c_4u.TimeRecordService.RegisterTimeRecord:output_type -> github.com.c_4u.RegisterTimeRecordResponse
	6,  // 19: github.com.c_4u.TimeRecordService.ApproveTimeRecord:output_type -> github.com.c_4u.StatusResponse
	6,  // 20: github.com.c_4u.TimeRecordService.RefuseTimeRecord:output_type -> github.com.c_4u.StatusResponse
	8,  // 21: github.com.c_4u.TimeRecordService.FindTimeRecord:output_type -> github.com.c_4u.FindTimeRecordResponse
	11, // 22: github.com.c_4u.TimeRecordService.SearchTimeRecords:output_type -> github.com.c_4u.SearchTimeRecordsResponse
	14, // 23: github.com.c_4u.TimeRecordService.ExportTimeRecords:output_type -> github.com.c_4u.ExportTimeRecordsResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_time_record_proto_init() }
func file_time_record_proto_init() {
	if File_time_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_time_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTimeRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTimeRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTimeRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseTimeRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTimeRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTimeRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterTimeRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTimeRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTimeRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTimeRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_time_record_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportTimeRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_time_record_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_time_record_proto_goTypes,
		DependencyIndexes: file_time_record_proto_depIdxs,
		EnumInfos:         file_time_record_proto_enumTypes,
		MessageInfos:      file_time_record_proto_msgTypes,
	}.Build()
	File_time_record_proto = out.File
	file_time_record_proto_rawDesc = nil
	file_time_record_proto_goTypes = nil
	file_time_record_proto_depIdxs = nil
}
