version: '3.4'

services:
  time-record-service:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    environment:
      ENV: dev
      ELASTIC_APM_SERVICE_NAME: time-record-service
    ports:
      - $TIME_RECORD_GRPC_PORT:50051
      - $TIME_RECORD_REST_PORT:8080
    volumes:
      - .:/go/src/
    depends_on:
      - postgres
    networks:
      - time-record
    extra_hosts:
      - 'host.docker.internal:172.17.0.1'

  postgres:
    image: postgres:9.4
    restart: always
    tty: true
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - $DB_PORT:5432
    networks:
      - time-record

  pgadmin:
    image: dpage/pgadmin4
    tty: true
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    ports:
      - 9000:80
    depends_on:
      - postgres
    networks:
      - time-record

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    networks:
      - time-record
    extra_hosts:
      - 'host.docker.internal:172.17.0.1'

  kafka-topics-generator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics --create --topic=NEW_EMPLOYEE --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=NEW_COMPANY --if-not-exists --bootstrap-server=kafka:9092 &&
        kafka-topics --create --topic=NEW_TIME_RECORD --if-not-exists --bootstrap-server=kafka:9092
        "
    networks:
      - time-record

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    networks:
      - time-record

volumes:
  pgdata:
    driver: local

networks:
  time-record:
    driver: bridge
